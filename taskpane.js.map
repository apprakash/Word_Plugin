{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/version.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/_shims/registry.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/_shims/MultipartBody.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/_shims/index.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/_shims/web-runtime.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/error.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/internal/decoders/line.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/internal/stream-utils.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/streaming.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/uploads.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/core.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resource.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/completions.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/pagination.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/internal/decoders/jsonl.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/messages/batches.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/_vendor/partial-json-parser/parser.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/lib/MessageStream.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/messages/messages.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/models.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/beta/models.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/beta/messages/batches.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/lib/BetaMessageStream.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/beta/messages/messages.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/resources/beta/beta.mjs","webpack://office-addin-taskpane/./node_modules/@anthropic-ai/sdk/index.mjs","webpack://office-addin-taskpane/./src/taskpane/services/ai.service.ts","webpack://office-addin-taskpane/./src/taskpane/services/document.service.ts","webpack://office-addin-taskpane/./src/taskpane/services/conversation.service.ts","webpack://office-addin-taskpane/./src/taskpane/services/ui.service.ts","webpack://office-addin-taskpane/./src/taskpane/services/tool.service.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export const VERSION = '0.39.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import '@anthropic-ai/sdk/shims/${shims.kind}'\\` before importing anything else from @anthropic-ai/sdk`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import '@anthropic-ai/sdk/shims/${shims.kind}'\\` after \\`import '@anthropic-ai/sdk/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from '@anthropic-ai/sdk/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from '@anthropic-ai/sdk'\\`:\n- \\`import '@anthropic-ai/sdk/shims/node'\\` (if you're running on Node)\n- \\`import '@anthropic-ai/sdk/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/anthropics/anthropic-sdk-typescript#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class AnthropicError extends Error {\n}\nexport class APIError extends AnthropicError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['request-id'];\n        this.error = error;\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse;\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\n//# sourceMappingURL=error.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LineDecoder_carriageReturnIndex;\nimport { AnthropicError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        this.buffer = new Uint8Array();\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(this.buffer.length + binaryChunk.length);\n        newData.set(this.buffer);\n        newData.set(binaryChunk, this.buffer.length);\n        this.buffer = newData;\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(this.buffer, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(this.decodeText(this.buffer.slice(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                this.buffer = this.buffer.slice(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"));\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = this.decodeText(this.buffer.slice(0, endIndex));\n            lines.push(line);\n            this.buffer = this.buffer.slice(patternIndex.index);\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new AnthropicError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new AnthropicError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new AnthropicError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=stream-utils.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { AnthropicError } from \"./error.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"./internal/stream-utils.mjs\";\nimport { createResponseHeaders } from \"./core.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (sse.event === 'completion') {\n                        try {\n                            yield JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                    }\n                    if (sse.event === 'message_start' ||\n                        sse.event === 'message_delta' ||\n                        sse.event === 'message_stop' ||\n                        sse.event === 'content_block_start' ||\n                        sse.event === 'content_block_delta' ||\n                        sse.event === 'content_block_stop') {\n                        try {\n                            yield JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                    }\n                    if (sse.event === 'ping') {\n                        continue;\n                    }\n                    if (sse.event === 'error') {\n                        throw APIError.generate(undefined, `SSE Error: ${sse.data}`, sse.data, createResponseHeaders(response.headers));\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new AnthropicError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { AnthropicError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from '@anthropic-ai/sdk'`:\n     * - `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n     * - `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned vie the `request-id` header which is useful for debugging requests and resporting\n     * issues to Anthropic.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from '@anthropic-ai/sdk'`:\n     * - `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n     * - `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(options, { retryCount = 0 } = {}) {\n        options = { ...options };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(options.timeout);\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    _calculateNonstreamingTimeout(maxTokens) {\n        const defaultTimeout = 10 * 60;\n        const expectedTimeout = (60 * 60 * maxTokens) / 128000;\n        if (expectedTimeout > defaultTimeout) {\n            throw new AnthropicError('Streaming is strongly recommended for operations that may take longer than 10 minutes. ' +\n                'See https://github.com/anthropics/anthropic-sdk-python#streaming-responses for more details');\n        }\n        return defaultTimeout * 1000;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new AnthropicError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        // turn on TCP keep-alive for the sockets, if the runtime supports it\n        const socketKeepAliveInterval = 60 * 1000;\n        const keepAliveTimeout = setTimeout(() => {\n            if (fetchOptions && fetchOptions?.agent?.sockets) {\n                for (const socket of Object.values(fetchOptions?.agent?.sockets).flat()) {\n                    if (socket?.setKeepAlive) {\n                        socket.setKeepAlive(true, socketKeepAliveInterval);\n                    }\n                }\n            }\n        }, socketKeepAliveInterval);\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n            clearTimeout(keepAliveTimeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new AnthropicError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new AnthropicError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new AnthropicError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(String(err));\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new AnthropicError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`Anthropic:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new AnthropicError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/v1/complete', {\n            body,\n            timeout: this._client._options.timeout ?? 600000,\n            ...options,\n            stream: body.stream ?? false,\n        });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n        this.first_id = body.first_id || null;\n        this.last_id = body.last_id || null;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        if (this.options.query?.['before_id']) {\n            // in reverse\n            const firstId = this.first_id;\n            if (!firstId) {\n                return null;\n            }\n            return {\n                params: {\n                    before_id: firstId,\n                },\n            };\n        }\n        const cursor = this.last_id;\n        if (!cursor) {\n            return null;\n        }\n        return {\n            params: {\n                after_id: cursor,\n            },\n        };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","import { AnthropicError } from \"../../error.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"../stream-utils.mjs\";\nimport { LineDecoder } from \"./line.mjs\";\nexport class JSONLDecoder {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    async *decoder() {\n        const lineDecoder = new LineDecoder();\n        for await (const chunk of this.iterator) {\n            for (const line of lineDecoder.decode(chunk)) {\n                yield JSON.parse(line);\n            }\n        }\n        for (const line of lineDecoder.flush()) {\n            yield JSON.parse(line);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this.decoder();\n    }\n    static fromResponse(response, controller) {\n        if (!response.body) {\n            controller.abort();\n            throw new AnthropicError(`Attempted to iterate over a response with no body`);\n        }\n        return new JSONLDecoder(ReadableStreamToAsyncIterable(response.body), controller);\n    }\n}\n//# sourceMappingURL=jsonl.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { Page } from \"../../pagination.mjs\";\nimport { JSONLDecoder } from \"../../internal/decoders/jsonl.mjs\";\nimport { AnthropicError } from \"../../error.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Send a batch of Message creation requests.\n     *\n     * The Message Batches API can be used to process multiple Messages API requests at\n     * once. Once a Message Batch is created, it begins processing immediately. Batches\n     * can take up to 24 hours to complete.\n     *\n     * Learn more about the Message Batches API in our\n     * [user guide](/en/docs/build-with-claude/batch-processing)\n     */\n    create(body, options) {\n        return this._client.post('/v1/messages/batches', { body, ...options });\n    }\n    /**\n     * This endpoint is idempotent and can be used to poll for Message Batch\n     * completion. To access the results of a Message Batch, make a request to the\n     * `results_url` field in the response.\n     *\n     * Learn more about the Message Batches API in our\n     * [user guide](/en/docs/build-with-claude/batch-processing)\n     */\n    retrieve(messageBatchId, options) {\n        return this._client.get(`/v1/messages/batches/${messageBatchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/v1/messages/batches', MessageBatchesPage, { query, ...options });\n    }\n    /**\n     * Delete a Message Batch.\n     *\n     * Message Batches can only be deleted once they've finished processing. If you'd\n     * like to delete an in-progress batch, you must first cancel it.\n     *\n     * Learn more about the Message Batches API in our\n     * [user guide](/en/docs/build-with-claude/batch-processing)\n     */\n    delete(messageBatchId, options) {\n        return this._client.delete(`/v1/messages/batches/${messageBatchId}`, options);\n    }\n    /**\n     * Batches may be canceled any time before processing ends. Once cancellation is\n     * initiated, the batch enters a `canceling` state, at which time the system may\n     * complete any in-progress, non-interruptible requests before finalizing\n     * cancellation.\n     *\n     * The number of canceled requests is specified in `request_counts`. To determine\n     * which requests were canceled, check the individual results within the batch.\n     * Note that cancellation may not result in any canceled requests if they were\n     * non-interruptible.\n     *\n     * Learn more about the Message Batches API in our\n     * [user guide](/en/docs/build-with-claude/batch-processing)\n     */\n    cancel(messageBatchId, options) {\n        return this._client.post(`/v1/messages/batches/${messageBatchId}/cancel`, options);\n    }\n    /**\n     * Streams the results of a Message Batch as a `.jsonl` file.\n     *\n     * Each line in the file is a JSON object containing the result of a single request\n     * in the Message Batch. Results are not guaranteed to be in the same order as\n     * requests. Use the `custom_id` field to match results to requests.\n     *\n     * Learn more about the Message Batches API in our\n     * [user guide](/en/docs/build-with-claude/batch-processing)\n     */\n    async results(messageBatchId, options) {\n        const batch = await this.retrieve(messageBatchId);\n        if (!batch.results_url) {\n            throw new AnthropicError(`No batch \\`results_url\\`; Has it finished processing? ${batch.processing_status} - ${batch.id}`);\n        }\n        return this._client\n            .get(batch.results_url, {\n            ...options,\n            headers: {\n                Accept: 'application/binary',\n                ...options?.headers,\n            },\n            __binaryResponse: true,\n        })\n            ._thenUnwrap((_, props) => JSONLDecoder.fromResponse(props.response, props.controller));\n    }\n}\nexport class MessageBatchesPage extends Page {\n}\nBatches.MessageBatchesPage = MessageBatchesPage;\n//# sourceMappingURL=batches.mjs.map","const tokenize = (input) => {\n    let current = 0;\n    let tokens = [];\n    while (current < input.length) {\n        let char = input[current];\n        if (char === '\\\\') {\n            current++;\n            continue;\n        }\n        if (char === '{') {\n            tokens.push({\n                type: 'brace',\n                value: '{',\n            });\n            current++;\n            continue;\n        }\n        if (char === '}') {\n            tokens.push({\n                type: 'brace',\n                value: '}',\n            });\n            current++;\n            continue;\n        }\n        if (char === '[') {\n            tokens.push({\n                type: 'paren',\n                value: '[',\n            });\n            current++;\n            continue;\n        }\n        if (char === ']') {\n            tokens.push({\n                type: 'paren',\n                value: ']',\n            });\n            current++;\n            continue;\n        }\n        if (char === ':') {\n            tokens.push({\n                type: 'separator',\n                value: ':',\n            });\n            current++;\n            continue;\n        }\n        if (char === ',') {\n            tokens.push({\n                type: 'delimiter',\n                value: ',',\n            });\n            current++;\n            continue;\n        }\n        if (char === '\"') {\n            let value = '';\n            let danglingQuote = false;\n            char = input[++current];\n            while (char !== '\"') {\n                if (current === input.length) {\n                    danglingQuote = true;\n                    break;\n                }\n                if (char === '\\\\') {\n                    current++;\n                    if (current === input.length) {\n                        danglingQuote = true;\n                        break;\n                    }\n                    value += char + input[current];\n                    char = input[++current];\n                }\n                else {\n                    value += char;\n                    char = input[++current];\n                }\n            }\n            char = input[++current];\n            if (!danglingQuote) {\n                tokens.push({\n                    type: 'string',\n                    value,\n                });\n            }\n            continue;\n        }\n        let WHITESPACE = /\\s/;\n        if (char && WHITESPACE.test(char)) {\n            current++;\n            continue;\n        }\n        let NUMBERS = /[0-9]/;\n        if ((char && NUMBERS.test(char)) || char === '-' || char === '.') {\n            let value = '';\n            if (char === '-') {\n                value += char;\n                char = input[++current];\n            }\n            while ((char && NUMBERS.test(char)) || char === '.') {\n                value += char;\n                char = input[++current];\n            }\n            tokens.push({\n                type: 'number',\n                value,\n            });\n            continue;\n        }\n        let LETTERS = /[a-z]/i;\n        if (char && LETTERS.test(char)) {\n            let value = '';\n            while (char && LETTERS.test(char)) {\n                if (current === input.length) {\n                    break;\n                }\n                value += char;\n                char = input[++current];\n            }\n            if (value == 'true' || value == 'false' || value === 'null') {\n                tokens.push({\n                    type: 'name',\n                    value,\n                });\n            }\n            else {\n                // unknown token, e.g. `nul` which isn't quite `null`\n                current++;\n                continue;\n            }\n            continue;\n        }\n        current++;\n    }\n    return tokens;\n}, strip = (tokens) => {\n    if (tokens.length === 0) {\n        return tokens;\n    }\n    let lastToken = tokens[tokens.length - 1];\n    switch (lastToken.type) {\n        case 'separator':\n            tokens = tokens.slice(0, tokens.length - 1);\n            return strip(tokens);\n            break;\n        case 'number':\n            let lastCharacterOfLastToken = lastToken.value[lastToken.value.length - 1];\n            if (lastCharacterOfLastToken === '.' || lastCharacterOfLastToken === '-') {\n                tokens = tokens.slice(0, tokens.length - 1);\n                return strip(tokens);\n            }\n        case 'string':\n            let tokenBeforeTheLastToken = tokens[tokens.length - 2];\n            if (tokenBeforeTheLastToken?.type === 'delimiter') {\n                tokens = tokens.slice(0, tokens.length - 1);\n                return strip(tokens);\n            }\n            else if (tokenBeforeTheLastToken?.type === 'brace' && tokenBeforeTheLastToken.value === '{') {\n                tokens = tokens.slice(0, tokens.length - 1);\n                return strip(tokens);\n            }\n            break;\n        case 'delimiter':\n            tokens = tokens.slice(0, tokens.length - 1);\n            return strip(tokens);\n            break;\n    }\n    return tokens;\n}, unstrip = (tokens) => {\n    let tail = [];\n    tokens.map((token) => {\n        if (token.type === 'brace') {\n            if (token.value === '{') {\n                tail.push('}');\n            }\n            else {\n                tail.splice(tail.lastIndexOf('}'), 1);\n            }\n        }\n        if (token.type === 'paren') {\n            if (token.value === '[') {\n                tail.push(']');\n            }\n            else {\n                tail.splice(tail.lastIndexOf(']'), 1);\n            }\n        }\n    });\n    if (tail.length > 0) {\n        tail.reverse().map((item) => {\n            if (item === '}') {\n                tokens.push({\n                    type: 'brace',\n                    value: '}',\n                });\n            }\n            else if (item === ']') {\n                tokens.push({\n                    type: 'paren',\n                    value: ']',\n                });\n            }\n        });\n    }\n    return tokens;\n}, generate = (tokens) => {\n    let output = '';\n    tokens.map((token) => {\n        switch (token.type) {\n            case 'string':\n                output += '\"' + token.value + '\"';\n                break;\n            default:\n                output += token.value;\n                break;\n        }\n    });\n    return output;\n}, partialParse = (input) => JSON.parse(generate(unstrip(strip(tokenize(input)))));\nexport { partialParse };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _MessageStream_instances, _MessageStream_currentMessageSnapshot, _MessageStream_connectedPromise, _MessageStream_resolveConnectedPromise, _MessageStream_rejectConnectedPromise, _MessageStream_endPromise, _MessageStream_resolveEndPromise, _MessageStream_rejectEndPromise, _MessageStream_listeners, _MessageStream_ended, _MessageStream_errored, _MessageStream_aborted, _MessageStream_catchingPromiseCreated, _MessageStream_response, _MessageStream_request_id, _MessageStream_getFinalMessage, _MessageStream_getFinalText, _MessageStream_handleError, _MessageStream_beginRequest, _MessageStream_addStreamEvent, _MessageStream_endRequest, _MessageStream_accumulateMessage;\nimport { AnthropicError, APIUserAbortError } from '@anthropic-ai/sdk/error';\nimport { Stream } from '@anthropic-ai/sdk/streaming';\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nconst JSON_BUF_PROPERTY = '__json_buf';\nexport class MessageStream {\n    constructor() {\n        _MessageStream_instances.add(this);\n        this.messages = [];\n        this.receivedMessages = [];\n        _MessageStream_currentMessageSnapshot.set(this, void 0);\n        this.controller = new AbortController();\n        _MessageStream_connectedPromise.set(this, void 0);\n        _MessageStream_resolveConnectedPromise.set(this, () => { });\n        _MessageStream_rejectConnectedPromise.set(this, () => { });\n        _MessageStream_endPromise.set(this, void 0);\n        _MessageStream_resolveEndPromise.set(this, () => { });\n        _MessageStream_rejectEndPromise.set(this, () => { });\n        _MessageStream_listeners.set(this, {});\n        _MessageStream_ended.set(this, false);\n        _MessageStream_errored.set(this, false);\n        _MessageStream_aborted.set(this, false);\n        _MessageStream_catchingPromiseCreated.set(this, false);\n        _MessageStream_response.set(this, void 0);\n        _MessageStream_request_id.set(this, void 0);\n        _MessageStream_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _MessageStream_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _MessageStream_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof AnthropicError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const anthropicError = new AnthropicError(error.message);\n                // @ts-ignore\n                anthropicError.cause = error;\n                return this._emit('error', anthropicError);\n            }\n            return this._emit('error', new AnthropicError(String(error)));\n        });\n        __classPrivateFieldSet(this, _MessageStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _MessageStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _MessageStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _MessageStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _MessageStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _MessageStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _MessageStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _MessageStream_endPromise, \"f\").catch(() => { });\n    }\n    get response() {\n        return __classPrivateFieldGet(this, _MessageStream_response, \"f\");\n    }\n    get request_id() {\n        return __classPrivateFieldGet(this, _MessageStream_request_id, \"f\");\n    }\n    /**\n     * Returns the `MessageStream` data, the raw `Response` instance and the ID of the request,\n     * returned vie the `request-id` header which is useful for debugging requests and resporting\n     * issues to Anthropic.\n     *\n     * This is the same as the `APIPromise.withResponse()` method.\n     *\n     * This method will raise an error if you created the stream using `MessageStream.fromReadableStream`\n     * as no `Response` is available.\n     */\n    async withResponse() {\n        const response = await __classPrivateFieldGet(this, _MessageStream_connectedPromise, \"f\");\n        if (!response) {\n            throw new Error('Could not resolve a `Response` object');\n        }\n        return {\n            data: this,\n            response,\n            request_id: response.headers.get('request-id'),\n        };\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new MessageStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createMessage(messages, params, options) {\n        const runner = new MessageStream();\n        for (const message of params.messages) {\n            runner._addMessageParam(message);\n        }\n        runner._run(() => runner._createMessage(messages, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    _run(executor) {\n        executor().then(() => {\n            this._emitFinal();\n            this._emit('end');\n        }, __classPrivateFieldGet(this, _MessageStream_handleError, \"f\"));\n    }\n    _addMessageParam(message) {\n        this.messages.push(message);\n    }\n    _addMessage(message, emit = true) {\n        this.receivedMessages.push(message);\n        if (emit) {\n            this._emit('message', message);\n        }\n    }\n    async _createMessage(messages, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_beginRequest).call(this);\n        const { response, data: stream } = await messages\n            .create({ ...params, stream: true }, { ...options, signal: this.controller.signal })\n            .withResponse();\n        this._connected(response);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_addStreamEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_endRequest).call(this);\n    }\n    _connected(response) {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _MessageStream_response, response, \"f\");\n        __classPrivateFieldSet(this, _MessageStream_request_id, response?.headers.get('request-id'), \"f\");\n        __classPrivateFieldGet(this, _MessageStream_resolveConnectedPromise, \"f\").call(this, response);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _MessageStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _MessageStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _MessageStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this MessageStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this MessageStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this MessageStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _MessageStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _MessageStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _MessageStream_endPromise, \"f\");\n    }\n    get currentMessage() {\n        return __classPrivateFieldGet(this, _MessageStream_currentMessageSnapshot, \"f\");\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant Message response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a Message.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant Message's text response, concatenated\n     * together if there are more than one text blocks.\n     * Rejects if an error occurred or the stream ended prematurely without producing a Message.\n     */\n    async finalText() {\n        await this.done();\n        return __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_getFinalText).call(this);\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any MessageStreamEvents after end\n        if (__classPrivateFieldGet(this, _MessageStream_ended, \"f\"))\n            return;\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _MessageStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _MessageStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _MessageStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _MessageStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _MessageStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _MessageStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _MessageStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.final...()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _MessageStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _MessageStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() {\n        const finalMessage = this.receivedMessages.at(-1);\n        if (finalMessage) {\n            this._emit('finalMessage', __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_getFinalMessage).call(this));\n        }\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_beginRequest).call(this);\n        this._connected(null);\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_addStreamEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_endRequest).call(this);\n    }\n    [(_MessageStream_currentMessageSnapshot = new WeakMap(), _MessageStream_connectedPromise = new WeakMap(), _MessageStream_resolveConnectedPromise = new WeakMap(), _MessageStream_rejectConnectedPromise = new WeakMap(), _MessageStream_endPromise = new WeakMap(), _MessageStream_resolveEndPromise = new WeakMap(), _MessageStream_rejectEndPromise = new WeakMap(), _MessageStream_listeners = new WeakMap(), _MessageStream_ended = new WeakMap(), _MessageStream_errored = new WeakMap(), _MessageStream_aborted = new WeakMap(), _MessageStream_catchingPromiseCreated = new WeakMap(), _MessageStream_response = new WeakMap(), _MessageStream_request_id = new WeakMap(), _MessageStream_handleError = new WeakMap(), _MessageStream_instances = new WeakSet(), _MessageStream_getFinalMessage = function _MessageStream_getFinalMessage() {\n        if (this.receivedMessages.length === 0) {\n            throw new AnthropicError('stream ended without producing a Message with role=assistant');\n        }\n        return this.receivedMessages.at(-1);\n    }, _MessageStream_getFinalText = function _MessageStream_getFinalText() {\n        if (this.receivedMessages.length === 0) {\n            throw new AnthropicError('stream ended without producing a Message with role=assistant');\n        }\n        const textBlocks = this.receivedMessages\n            .at(-1)\n            .content.filter((block) => block.type === 'text')\n            .map((block) => block.text);\n        if (textBlocks.length === 0) {\n            throw new AnthropicError('stream ended without producing a content block with type=text');\n        }\n        return textBlocks.join(' ');\n    }, _MessageStream_beginRequest = function _MessageStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _MessageStream_currentMessageSnapshot, undefined, \"f\");\n    }, _MessageStream_addStreamEvent = function _MessageStream_addStreamEvent(event) {\n        if (this.ended)\n            return;\n        const messageSnapshot = __classPrivateFieldGet(this, _MessageStream_instances, \"m\", _MessageStream_accumulateMessage).call(this, event);\n        this._emit('streamEvent', event, messageSnapshot);\n        switch (event.type) {\n            case 'content_block_delta': {\n                const content = messageSnapshot.content.at(-1);\n                switch (event.delta.type) {\n                    case 'text_delta': {\n                        if (content.type === 'text') {\n                            this._emit('text', event.delta.text, content.text || '');\n                        }\n                        break;\n                    }\n                    case 'citations_delta': {\n                        if (content.type === 'text') {\n                            this._emit('citation', event.delta.citation, content.citations ?? []);\n                        }\n                        break;\n                    }\n                    case 'input_json_delta': {\n                        if (content.type === 'tool_use' && content.input) {\n                            this._emit('inputJson', event.delta.partial_json, content.input);\n                        }\n                        break;\n                    }\n                    case 'thinking_delta': {\n                        if (content.type === 'thinking') {\n                            this._emit('thinking', event.delta.thinking, content.thinking);\n                        }\n                        break;\n                    }\n                    case 'signature_delta': {\n                        if (content.type === 'thinking') {\n                            this._emit('signature', content.signature);\n                        }\n                        break;\n                    }\n                    default:\n                        checkNever(event.delta);\n                }\n                break;\n            }\n            case 'message_stop': {\n                this._addMessageParam(messageSnapshot);\n                this._addMessage(messageSnapshot, true);\n                break;\n            }\n            case 'content_block_stop': {\n                this._emit('contentBlock', messageSnapshot.content.at(-1));\n                break;\n            }\n            case 'message_start': {\n                __classPrivateFieldSet(this, _MessageStream_currentMessageSnapshot, messageSnapshot, \"f\");\n                break;\n            }\n            case 'content_block_start':\n            case 'message_delta':\n                break;\n        }\n    }, _MessageStream_endRequest = function _MessageStream_endRequest() {\n        if (this.ended) {\n            throw new AnthropicError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _MessageStream_currentMessageSnapshot, \"f\");\n        if (!snapshot) {\n            throw new AnthropicError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _MessageStream_currentMessageSnapshot, undefined, \"f\");\n        return snapshot;\n    }, _MessageStream_accumulateMessage = function _MessageStream_accumulateMessage(event) {\n        let snapshot = __classPrivateFieldGet(this, _MessageStream_currentMessageSnapshot, \"f\");\n        if (event.type === 'message_start') {\n            if (snapshot) {\n                throw new AnthropicError(`Unexpected event order, got ${event.type} before receiving \"message_stop\"`);\n            }\n            return event.message;\n        }\n        if (!snapshot) {\n            throw new AnthropicError(`Unexpected event order, got ${event.type} before \"message_start\"`);\n        }\n        switch (event.type) {\n            case 'message_stop':\n                return snapshot;\n            case 'message_delta':\n                snapshot.stop_reason = event.delta.stop_reason;\n                snapshot.stop_sequence = event.delta.stop_sequence;\n                snapshot.usage.output_tokens = event.usage.output_tokens;\n                return snapshot;\n            case 'content_block_start':\n                snapshot.content.push(event.content_block);\n                return snapshot;\n            case 'content_block_delta': {\n                const snapshotContent = snapshot.content.at(event.index);\n                switch (event.delta.type) {\n                    case 'text_delta': {\n                        if (snapshotContent?.type === 'text') {\n                            snapshotContent.text += event.delta.text;\n                        }\n                        break;\n                    }\n                    case 'citations_delta': {\n                        if (snapshotContent?.type === 'text') {\n                            snapshotContent.citations ?? (snapshotContent.citations = []);\n                            snapshotContent.citations.push(event.delta.citation);\n                        }\n                        break;\n                    }\n                    case 'input_json_delta': {\n                        if (snapshotContent?.type === 'tool_use') {\n                            // we need to keep track of the raw JSON string as well so that we can\n                            // re-parse it for each delta, for now we just store it as an untyped\n                            // non-enumerable property on the snapshot\n                            let jsonBuf = snapshotContent[JSON_BUF_PROPERTY] || '';\n                            jsonBuf += event.delta.partial_json;\n                            Object.defineProperty(snapshotContent, JSON_BUF_PROPERTY, {\n                                value: jsonBuf,\n                                enumerable: false,\n                                writable: true,\n                            });\n                            if (jsonBuf) {\n                                snapshotContent.input = partialParse(jsonBuf);\n                            }\n                        }\n                        break;\n                    }\n                    case 'thinking_delta': {\n                        if (snapshotContent?.type === 'thinking') {\n                            snapshotContent.thinking += event.delta.thinking;\n                        }\n                        break;\n                    }\n                    case 'signature_delta': {\n                        if (snapshotContent?.type === 'thinking') {\n                            snapshotContent.signature = event.delta.signature;\n                        }\n                        break;\n                    }\n                    default:\n                        checkNever(event.delta);\n                }\n                return snapshot;\n            }\n            case 'content_block_stop':\n                return snapshot;\n        }\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('streamEvent', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\n// used to ensure exhaustive case matching without throwing a runtime error\nfunction checkNever(x) { }\n//# sourceMappingURL=MessageStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as BatchesAPI from \"./batches.mjs\";\nimport { Batches, MessageBatchesPage, } from \"./batches.mjs\";\nimport { MessageStream } from \"../../lib/MessageStream.mjs\";\nexport { MessageStream } from \"../../lib/MessageStream.mjs\";\nexport class Messages extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.batches = new BatchesAPI.Batches(this._client);\n    }\n    create(body, options) {\n        if (body.model in DEPRECATED_MODELS) {\n            console.warn(`The model '${body.model}' is deprecated and will reach end-of-life on ${DEPRECATED_MODELS[body.model]}\\nPlease migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.`);\n        }\n        return this._client.post('/v1/messages', {\n            body,\n            timeout: this._client._options.timeout ??\n                (body.stream ? 600000 : this._client._calculateNonstreamingTimeout(body.max_tokens)),\n            ...options,\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * Create a Message stream\n     */\n    stream(body, options) {\n        return MessageStream.createMessage(this, body, options);\n    }\n    /**\n     * Count the number of tokens in a Message.\n     *\n     * The Token Count API can be used to count the number of tokens in a Message,\n     * including tools, images, and documents, without creating it.\n     *\n     * Learn more about token counting in our\n     * [user guide](/en/docs/build-with-claude/token-counting)\n     */\n    countTokens(body, options) {\n        return this._client.post('/v1/messages/count_tokens', { body, ...options });\n    }\n}\nconst DEPRECATED_MODELS = {\n    'claude-1.3': 'November 6th, 2024',\n    'claude-1.3-100k': 'November 6th, 2024',\n    'claude-instant-1.1': 'November 6th, 2024',\n    'claude-instant-1.1-100k': 'November 6th, 2024',\n    'claude-instant-1.2': 'November 6th, 2024',\n    'claude-3-sonnet-20240229': 'July 21st, 2025',\n    'claude-2.1': 'July 21st, 2025',\n    'claude-2.0': 'July 21st, 2025',\n};\nMessages.Batches = Batches;\nMessages.MessageBatchesPage = MessageBatchesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Get a specific model.\n     *\n     * The Models API response can be used to determine information about a specific\n     * model or resolve a model alias to a model ID.\n     */\n    retrieve(modelId, options) {\n        return this._client.get(`/v1/models/${modelId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/v1/models', ModelInfosPage, { query, ...options });\n    }\n}\nexport class ModelInfosPage extends Page {\n}\nModels.ModelInfosPage = ModelInfosPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { Page } from \"../../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Get a specific model.\n     *\n     * The Models API response can be used to determine information about a specific\n     * model or resolve a model alias to a model ID.\n     */\n    retrieve(modelId, options) {\n        return this._client.get(`/v1/models/${modelId}?beta=true`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/v1/models?beta=true', BetaModelInfosPage, { query, ...options });\n    }\n}\nexport class BetaModelInfosPage extends Page {\n}\nModels.BetaModelInfosPage = BetaModelInfosPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { Page } from \"../../../pagination.mjs\";\nimport { JSONLDecoder } from \"../../../internal/decoders/jsonl.mjs\";\nimport { AnthropicError } from \"../../../error.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Send a batch of Message creation requests.\n     *\n     * The Message Batches API can be used to process multiple Messages API requests at\n     * once. Once a Message Batch is created, it begins processing immediately. Batches\n     * can take up to 24 hours to complete.\n     *\n     * Learn more about the Message Batches API in our\n     * [user guide](/en/docs/build-with-claude/batch-processing)\n     */\n    create(params, options) {\n        const { betas, ...body } = params;\n        return this._client.post('/v1/messages/batches?beta=true', {\n            body,\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n                ...options?.headers,\n            },\n        });\n    }\n    retrieve(messageBatchId, params = {}, options) {\n        if (isRequestOptions(params)) {\n            return this.retrieve(messageBatchId, {}, params);\n        }\n        const { betas } = params;\n        return this._client.get(`/v1/messages/batches/${messageBatchId}?beta=true`, {\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n                ...options?.headers,\n            },\n        });\n    }\n    list(params = {}, options) {\n        if (isRequestOptions(params)) {\n            return this.list({}, params);\n        }\n        const { betas, ...query } = params;\n        return this._client.getAPIList('/v1/messages/batches?beta=true', BetaMessageBatchesPage, {\n            query,\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n                ...options?.headers,\n            },\n        });\n    }\n    delete(messageBatchId, params = {}, options) {\n        if (isRequestOptions(params)) {\n            return this.delete(messageBatchId, {}, params);\n        }\n        const { betas } = params;\n        return this._client.delete(`/v1/messages/batches/${messageBatchId}?beta=true`, {\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n                ...options?.headers,\n            },\n        });\n    }\n    cancel(messageBatchId, params = {}, options) {\n        if (isRequestOptions(params)) {\n            return this.cancel(messageBatchId, {}, params);\n        }\n        const { betas } = params;\n        return this._client.post(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`, {\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n                ...options?.headers,\n            },\n        });\n    }\n    async results(messageBatchId, params = {}, options) {\n        if (isRequestOptions(params)) {\n            return this.results(messageBatchId, {}, params);\n        }\n        const batch = await this.retrieve(messageBatchId);\n        if (!batch.results_url) {\n            throw new AnthropicError(`No batch \\`results_url\\`; Has it finished processing? ${batch.processing_status} - ${batch.id}`);\n        }\n        const { betas } = params;\n        return this._client\n            .get(batch.results_url, {\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n                Accept: 'application/binary',\n                ...options?.headers,\n            },\n            __binaryResponse: true,\n        })\n            ._thenUnwrap((_, props) => JSONLDecoder.fromResponse(props.response, props.controller));\n    }\n}\nexport class BetaMessageBatchesPage extends Page {\n}\nBatches.BetaMessageBatchesPage = BetaMessageBatchesPage;\n//# sourceMappingURL=batches.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BetaMessageStream_instances, _BetaMessageStream_currentMessageSnapshot, _BetaMessageStream_connectedPromise, _BetaMessageStream_resolveConnectedPromise, _BetaMessageStream_rejectConnectedPromise, _BetaMessageStream_endPromise, _BetaMessageStream_resolveEndPromise, _BetaMessageStream_rejectEndPromise, _BetaMessageStream_listeners, _BetaMessageStream_ended, _BetaMessageStream_errored, _BetaMessageStream_aborted, _BetaMessageStream_catchingPromiseCreated, _BetaMessageStream_response, _BetaMessageStream_request_id, _BetaMessageStream_getFinalMessage, _BetaMessageStream_getFinalText, _BetaMessageStream_handleError, _BetaMessageStream_beginRequest, _BetaMessageStream_addStreamEvent, _BetaMessageStream_endRequest, _BetaMessageStream_accumulateMessage;\nimport { AnthropicError, APIUserAbortError } from '@anthropic-ai/sdk/error';\nimport { Stream } from '@anthropic-ai/sdk/streaming';\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nconst JSON_BUF_PROPERTY = '__json_buf';\nexport class BetaMessageStream {\n    constructor() {\n        _BetaMessageStream_instances.add(this);\n        this.messages = [];\n        this.receivedMessages = [];\n        _BetaMessageStream_currentMessageSnapshot.set(this, void 0);\n        this.controller = new AbortController();\n        _BetaMessageStream_connectedPromise.set(this, void 0);\n        _BetaMessageStream_resolveConnectedPromise.set(this, () => { });\n        _BetaMessageStream_rejectConnectedPromise.set(this, () => { });\n        _BetaMessageStream_endPromise.set(this, void 0);\n        _BetaMessageStream_resolveEndPromise.set(this, () => { });\n        _BetaMessageStream_rejectEndPromise.set(this, () => { });\n        _BetaMessageStream_listeners.set(this, {});\n        _BetaMessageStream_ended.set(this, false);\n        _BetaMessageStream_errored.set(this, false);\n        _BetaMessageStream_aborted.set(this, false);\n        _BetaMessageStream_catchingPromiseCreated.set(this, false);\n        _BetaMessageStream_response.set(this, void 0);\n        _BetaMessageStream_request_id.set(this, void 0);\n        _BetaMessageStream_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _BetaMessageStream_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _BetaMessageStream_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof AnthropicError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const anthropicError = new AnthropicError(error.message);\n                // @ts-ignore\n                anthropicError.cause = error;\n                return this._emit('error', anthropicError);\n            }\n            return this._emit('error', new AnthropicError(String(error)));\n        });\n        __classPrivateFieldSet(this, _BetaMessageStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _BetaMessageStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _BetaMessageStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _BetaMessageStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _BetaMessageStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _BetaMessageStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _BetaMessageStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _BetaMessageStream_endPromise, \"f\").catch(() => { });\n    }\n    get response() {\n        return __classPrivateFieldGet(this, _BetaMessageStream_response, \"f\");\n    }\n    get request_id() {\n        return __classPrivateFieldGet(this, _BetaMessageStream_request_id, \"f\");\n    }\n    /**\n     * Returns the `MessageStream` data, the raw `Response` instance and the ID of the request,\n     * returned vie the `request-id` header which is useful for debugging requests and resporting\n     * issues to Anthropic.\n     *\n     * This is the same as the `APIPromise.withResponse()` method.\n     *\n     * This method will raise an error if you created the stream using `MessageStream.fromReadableStream`\n     * as no `Response` is available.\n     */\n    async withResponse() {\n        const response = await __classPrivateFieldGet(this, _BetaMessageStream_connectedPromise, \"f\");\n        if (!response) {\n            throw new Error('Could not resolve a `Response` object');\n        }\n        return {\n            data: this,\n            response,\n            request_id: response.headers.get('request-id'),\n        };\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new BetaMessageStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createMessage(messages, params, options) {\n        const runner = new BetaMessageStream();\n        for (const message of params.messages) {\n            runner._addMessageParam(message);\n        }\n        runner._run(() => runner._createMessage(messages, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    _run(executor) {\n        executor().then(() => {\n            this._emitFinal();\n            this._emit('end');\n        }, __classPrivateFieldGet(this, _BetaMessageStream_handleError, \"f\"));\n    }\n    _addMessageParam(message) {\n        this.messages.push(message);\n    }\n    _addMessage(message, emit = true) {\n        this.receivedMessages.push(message);\n        if (emit) {\n            this._emit('message', message);\n        }\n    }\n    async _createMessage(messages, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_beginRequest).call(this);\n        const { response, data: stream } = await messages\n            .create({ ...params, stream: true }, { ...options, signal: this.controller.signal })\n            .withResponse();\n        this._connected(response);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_addStreamEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_endRequest).call(this);\n    }\n    _connected(response) {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _BetaMessageStream_response, response, \"f\");\n        __classPrivateFieldSet(this, _BetaMessageStream_request_id, response?.headers.get('request-id'), \"f\");\n        __classPrivateFieldGet(this, _BetaMessageStream_resolveConnectedPromise, \"f\").call(this, response);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _BetaMessageStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _BetaMessageStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _BetaMessageStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this MessageStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this MessageStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this MessageStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _BetaMessageStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _BetaMessageStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _BetaMessageStream_endPromise, \"f\");\n    }\n    get currentMessage() {\n        return __classPrivateFieldGet(this, _BetaMessageStream_currentMessageSnapshot, \"f\");\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant Message response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a Message.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant Message's text response, concatenated\n     * together if there are more than one text blocks.\n     * Rejects if an error occurred or the stream ended prematurely without producing a Message.\n     */\n    async finalText() {\n        await this.done();\n        return __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_getFinalText).call(this);\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any MessageStreamEvents after end\n        if (__classPrivateFieldGet(this, _BetaMessageStream_ended, \"f\"))\n            return;\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _BetaMessageStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _BetaMessageStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _BetaMessageStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _BetaMessageStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _BetaMessageStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _BetaMessageStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _BetaMessageStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.final...()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _BetaMessageStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _BetaMessageStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() {\n        const finalMessage = this.receivedMessages.at(-1);\n        if (finalMessage) {\n            this._emit('finalMessage', __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_getFinalMessage).call(this));\n        }\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_beginRequest).call(this);\n        this._connected(null);\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_addStreamEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_endRequest).call(this);\n    }\n    [(_BetaMessageStream_currentMessageSnapshot = new WeakMap(), _BetaMessageStream_connectedPromise = new WeakMap(), _BetaMessageStream_resolveConnectedPromise = new WeakMap(), _BetaMessageStream_rejectConnectedPromise = new WeakMap(), _BetaMessageStream_endPromise = new WeakMap(), _BetaMessageStream_resolveEndPromise = new WeakMap(), _BetaMessageStream_rejectEndPromise = new WeakMap(), _BetaMessageStream_listeners = new WeakMap(), _BetaMessageStream_ended = new WeakMap(), _BetaMessageStream_errored = new WeakMap(), _BetaMessageStream_aborted = new WeakMap(), _BetaMessageStream_catchingPromiseCreated = new WeakMap(), _BetaMessageStream_response = new WeakMap(), _BetaMessageStream_request_id = new WeakMap(), _BetaMessageStream_handleError = new WeakMap(), _BetaMessageStream_instances = new WeakSet(), _BetaMessageStream_getFinalMessage = function _BetaMessageStream_getFinalMessage() {\n        if (this.receivedMessages.length === 0) {\n            throw new AnthropicError('stream ended without producing a Message with role=assistant');\n        }\n        return this.receivedMessages.at(-1);\n    }, _BetaMessageStream_getFinalText = function _BetaMessageStream_getFinalText() {\n        if (this.receivedMessages.length === 0) {\n            throw new AnthropicError('stream ended without producing a Message with role=assistant');\n        }\n        const textBlocks = this.receivedMessages\n            .at(-1)\n            .content.filter((block) => block.type === 'text')\n            .map((block) => block.text);\n        if (textBlocks.length === 0) {\n            throw new AnthropicError('stream ended without producing a content block with type=text');\n        }\n        return textBlocks.join(' ');\n    }, _BetaMessageStream_beginRequest = function _BetaMessageStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _BetaMessageStream_currentMessageSnapshot, undefined, \"f\");\n    }, _BetaMessageStream_addStreamEvent = function _BetaMessageStream_addStreamEvent(event) {\n        if (this.ended)\n            return;\n        const messageSnapshot = __classPrivateFieldGet(this, _BetaMessageStream_instances, \"m\", _BetaMessageStream_accumulateMessage).call(this, event);\n        this._emit('streamEvent', event, messageSnapshot);\n        switch (event.type) {\n            case 'content_block_delta': {\n                const content = messageSnapshot.content.at(-1);\n                switch (event.delta.type) {\n                    case 'text_delta': {\n                        if (content.type === 'text') {\n                            this._emit('text', event.delta.text, content.text || '');\n                        }\n                        break;\n                    }\n                    case 'citations_delta': {\n                        if (content.type === 'text') {\n                            this._emit('citation', event.delta.citation, content.citations ?? []);\n                        }\n                        break;\n                    }\n                    case 'input_json_delta': {\n                        if (content.type === 'tool_use' && content.input) {\n                            this._emit('inputJson', event.delta.partial_json, content.input);\n                        }\n                        break;\n                    }\n                    case 'thinking_delta': {\n                        if (content.type === 'thinking') {\n                            this._emit('thinking', event.delta.thinking, content.thinking);\n                        }\n                        break;\n                    }\n                    case 'signature_delta': {\n                        if (content.type === 'thinking') {\n                            this._emit('signature', content.signature);\n                        }\n                        break;\n                    }\n                    default:\n                        checkNever(event.delta);\n                }\n                break;\n            }\n            case 'message_stop': {\n                this._addMessageParam(messageSnapshot);\n                this._addMessage(messageSnapshot, true);\n                break;\n            }\n            case 'content_block_stop': {\n                this._emit('contentBlock', messageSnapshot.content.at(-1));\n                break;\n            }\n            case 'message_start': {\n                __classPrivateFieldSet(this, _BetaMessageStream_currentMessageSnapshot, messageSnapshot, \"f\");\n                break;\n            }\n            case 'content_block_start':\n            case 'message_delta':\n                break;\n        }\n    }, _BetaMessageStream_endRequest = function _BetaMessageStream_endRequest() {\n        if (this.ended) {\n            throw new AnthropicError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _BetaMessageStream_currentMessageSnapshot, \"f\");\n        if (!snapshot) {\n            throw new AnthropicError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _BetaMessageStream_currentMessageSnapshot, undefined, \"f\");\n        return snapshot;\n    }, _BetaMessageStream_accumulateMessage = function _BetaMessageStream_accumulateMessage(event) {\n        let snapshot = __classPrivateFieldGet(this, _BetaMessageStream_currentMessageSnapshot, \"f\");\n        if (event.type === 'message_start') {\n            if (snapshot) {\n                throw new AnthropicError(`Unexpected event order, got ${event.type} before receiving \"message_stop\"`);\n            }\n            return event.message;\n        }\n        if (!snapshot) {\n            throw new AnthropicError(`Unexpected event order, got ${event.type} before \"message_start\"`);\n        }\n        switch (event.type) {\n            case 'message_stop':\n                return snapshot;\n            case 'message_delta':\n                snapshot.stop_reason = event.delta.stop_reason;\n                snapshot.stop_sequence = event.delta.stop_sequence;\n                snapshot.usage.output_tokens = event.usage.output_tokens;\n                return snapshot;\n            case 'content_block_start':\n                snapshot.content.push(event.content_block);\n                return snapshot;\n            case 'content_block_delta': {\n                const snapshotContent = snapshot.content.at(event.index);\n                switch (event.delta.type) {\n                    case 'text_delta': {\n                        if (snapshotContent?.type === 'text') {\n                            snapshotContent.text += event.delta.text;\n                        }\n                        break;\n                    }\n                    case 'citations_delta': {\n                        if (snapshotContent?.type === 'text') {\n                            snapshotContent.citations ?? (snapshotContent.citations = []);\n                            snapshotContent.citations.push(event.delta.citation);\n                        }\n                        break;\n                    }\n                    case 'input_json_delta': {\n                        if (snapshotContent?.type === 'tool_use') {\n                            // we need to keep track of the raw JSON string as well so that we can\n                            // re-parse it for each delta, for now we just store it as an untyped\n                            // non-enumerable property on the snapshot\n                            let jsonBuf = snapshotContent[JSON_BUF_PROPERTY] || '';\n                            jsonBuf += event.delta.partial_json;\n                            Object.defineProperty(snapshotContent, JSON_BUF_PROPERTY, {\n                                value: jsonBuf,\n                                enumerable: false,\n                                writable: true,\n                            });\n                            if (jsonBuf) {\n                                snapshotContent.input = partialParse(jsonBuf);\n                            }\n                        }\n                        break;\n                    }\n                    case 'thinking_delta': {\n                        if (snapshotContent?.type === 'thinking') {\n                            snapshotContent.thinking += event.delta.thinking;\n                        }\n                        break;\n                    }\n                    case 'signature_delta': {\n                        if (snapshotContent?.type === 'thinking') {\n                            snapshotContent.signature = event.delta.signature;\n                        }\n                        break;\n                    }\n                    default:\n                        checkNever(event.delta);\n                }\n                return snapshot;\n            }\n            case 'content_block_stop':\n                return snapshot;\n        }\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('streamEvent', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\n// used to ensure exhaustive case matching without throwing a runtime error\nfunction checkNever(x) { }\n//# sourceMappingURL=BetaMessageStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as BatchesAPI from \"./batches.mjs\";\nimport { Batches, BetaMessageBatchesPage, } from \"./batches.mjs\";\nimport { BetaMessageStream } from \"../../../lib/BetaMessageStream.mjs\";\nconst DEPRECATED_MODELS = {\n    'claude-1.3': 'November 6th, 2024',\n    'claude-1.3-100k': 'November 6th, 2024',\n    'claude-instant-1.1': 'November 6th, 2024',\n    'claude-instant-1.1-100k': 'November 6th, 2024',\n    'claude-instant-1.2': 'November 6th, 2024',\n    'claude-3-sonnet-20240229': 'July 21st, 2025',\n    'claude-2.1': 'July 21st, 2025',\n    'claude-2.0': 'July 21st, 2025',\n};\nexport class Messages extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.batches = new BatchesAPI.Batches(this._client);\n    }\n    create(params, options) {\n        const { betas, ...body } = params;\n        if (body.model in DEPRECATED_MODELS) {\n            console.warn(`The model '${body.model}' is deprecated and will reach end-of-life on ${DEPRECATED_MODELS[body.model]}\\nPlease migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.`);\n        }\n        return this._client.post('/v1/messages?beta=true', {\n            body,\n            timeout: this._client._options.timeout ??\n                (body.stream ? 600000 : this._client._calculateNonstreamingTimeout(body.max_tokens)),\n            ...options,\n            headers: {\n                ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined),\n                ...options?.headers,\n            },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Create a Message stream\n     */\n    stream(body, options) {\n        return BetaMessageStream.createMessage(this, body, options);\n    }\n    /**\n     * Count the number of tokens in a Message.\n     *\n     * The Token Count API can be used to count the number of tokens in a Message,\n     * including tools, images, and documents, without creating it.\n     *\n     * Learn more about token counting in our\n     * [user guide](/en/docs/build-with-claude/token-counting)\n     */\n    countTokens(params, options) {\n        const { betas, ...body } = params;\n        return this._client.post('/v1/messages/count_tokens?beta=true', {\n            body,\n            ...options,\n            headers: {\n                'anthropic-beta': [...(betas ?? []), 'token-counting-2024-11-01'].toString(),\n                ...options?.headers,\n            },\n        });\n    }\n}\nMessages.Batches = Batches;\nMessages.BetaMessageBatchesPage = BetaMessageBatchesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as ModelsAPI from \"./models.mjs\";\nimport { BetaModelInfosPage, Models } from \"./models.mjs\";\nimport * as MessagesAPI from \"./messages/messages.mjs\";\nimport { Messages, } from \"./messages/messages.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.models = new ModelsAPI.Models(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n}\nBeta.Models = Models;\nBeta.BetaModelInfosPage = BetaModelInfosPage;\nBeta.Messages = Messages;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { ModelInfosPage, Models } from \"./resources/models.mjs\";\nimport { Beta, } from \"./resources/beta/beta.mjs\";\nimport { Messages, } from \"./resources/messages/messages.mjs\";\n/**\n * API Client for interfacing with the Anthropic API.\n */\nexport class Anthropic extends Core.APIClient {\n    /**\n     * API Client for interfacing with the Anthropic API.\n     *\n     * @param {string | null | undefined} [opts.apiKey=process.env['ANTHROPIC_API_KEY'] ?? null]\n     * @param {string | null | undefined} [opts.authToken=process.env['ANTHROPIC_AUTH_TOKEN'] ?? null]\n     * @param {string} [opts.baseURL=process.env['ANTHROPIC_BASE_URL'] ?? https://api.anthropic.com] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('ANTHROPIC_BASE_URL'), apiKey = Core.readEnv('ANTHROPIC_API_KEY') ?? null, authToken = Core.readEnv('ANTHROPIC_AUTH_TOKEN') ?? null, ...opts } = {}) {\n        const options = {\n            apiKey,\n            authToken,\n            ...opts,\n            baseURL: baseURL || `https://api.anthropic.com`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.AnthropicError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Anthropic({ apiKey, dangerouslyAllowBrowser: true });\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.messages = new API.Messages(this);\n        this.models = new API.Models(this);\n        this.beta = new API.Beta(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.authToken = authToken;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            ...(this._options.dangerouslyAllowBrowser ?\n                { 'anthropic-dangerous-direct-browser-access': 'true' }\n                : undefined),\n            'anthropic-version': '2023-06-01',\n            ...this._options.defaultHeaders,\n        };\n    }\n    validateHeaders(headers, customHeaders) {\n        if (this.apiKey && headers['x-api-key']) {\n            return;\n        }\n        if (customHeaders['x-api-key'] === null) {\n            return;\n        }\n        if (this.authToken && headers['authorization']) {\n            return;\n        }\n        if (customHeaders['authorization'] === null) {\n            return;\n        }\n        throw new Error('Could not resolve authentication method. Expected either apiKey or authToken to be set. Or for one of the \"X-Api-Key\" or \"Authorization\" headers to be explicitly omitted');\n    }\n    authHeaders(opts) {\n        const apiKeyAuth = this.apiKeyAuth(opts);\n        const bearerAuth = this.bearerAuth(opts);\n        if (apiKeyAuth != null && !Core.isEmptyObj(apiKeyAuth)) {\n            return apiKeyAuth;\n        }\n        if (bearerAuth != null && !Core.isEmptyObj(bearerAuth)) {\n            return bearerAuth;\n        }\n        return {};\n    }\n    apiKeyAuth(opts) {\n        if (this.apiKey == null) {\n            return {};\n        }\n        return { 'X-Api-Key': this.apiKey };\n    }\n    bearerAuth(opts) {\n        if (this.authToken == null) {\n            return {};\n        }\n        return { Authorization: `Bearer ${this.authToken}` };\n    }\n}\n_a = Anthropic;\nAnthropic.Anthropic = _a;\nAnthropic.HUMAN_PROMPT = '\\n\\nHuman:';\nAnthropic.AI_PROMPT = '\\n\\nAssistant:';\nAnthropic.DEFAULT_TIMEOUT = 600000; // 10 minutes\nAnthropic.AnthropicError = Errors.AnthropicError;\nAnthropic.APIError = Errors.APIError;\nAnthropic.APIConnectionError = Errors.APIConnectionError;\nAnthropic.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nAnthropic.APIUserAbortError = Errors.APIUserAbortError;\nAnthropic.NotFoundError = Errors.NotFoundError;\nAnthropic.ConflictError = Errors.ConflictError;\nAnthropic.RateLimitError = Errors.RateLimitError;\nAnthropic.BadRequestError = Errors.BadRequestError;\nAnthropic.AuthenticationError = Errors.AuthenticationError;\nAnthropic.InternalServerError = Errors.InternalServerError;\nAnthropic.PermissionDeniedError = Errors.PermissionDeniedError;\nAnthropic.UnprocessableEntityError = Errors.UnprocessableEntityError;\nAnthropic.toFile = Uploads.toFile;\nAnthropic.fileFromPath = Uploads.fileFromPath;\nAnthropic.Completions = Completions;\nAnthropic.Messages = Messages;\nAnthropic.Models = Models;\nAnthropic.ModelInfosPage = ModelInfosPage;\nAnthropic.Beta = Beta;\nexport const { HUMAN_PROMPT, AI_PROMPT } = Anthropic;\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { AnthropicError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default Anthropic;\n//# sourceMappingURL=index.mjs.map","import Anthropic from \"@anthropic-ai/sdk\";\nimport { ToolOperation } from '../models/interfaces';\n\nexport async function getAIResponse(userRequest: string, documentContent: string, apiKey: string): Promise<{\n  aiResponse: string;\n  toolOperations: ToolOperation[];\n}> {\n  try {\n    const anthropic = new Anthropic({\n      apiKey: apiKey,\n      dangerouslyAllowBrowser: true,\n    });\n\n    const response = await anthropic.messages.create({\n      model: \"claude-3-haiku-20240307\",\n      max_tokens: 2000,\n      system: \"You are a helpful document assistant. You can view document content and make changes to it. You have the following tools available: 1) text_editor - for replacing text in the document, 2) document_writer - for writing content directly to the document. Always use document_writer when you need to add substantial content to the document. IMPORTANT: When making small changes like updating dates or specific text, always use text_editor with str_replace to preserve the existing formatting. When using document_writer with replace_all, always preserve the original document structure including paragraph breaks, line spacing, and indentation. Never collapse formatted text into a single paragraph when making edits.\",\n      messages: [\n        {\n          role: \"user\",\n          content: [\n            {\n              type: \"text\",\n              text: `Document content: ${documentContent}\\n\\nUser request: ${userRequest}`\n            }\n          ]\n        }\n      ],\n      tools: [\n        {\n          name: \"text_editor\",\n          description: \"Tool for viewing and editing document content\",\n          input_schema: {\n            type: \"object\",\n            properties: {\n              command: {\n                type: \"string\",\n                enum: [\"view\", \"str_replace\"],\n                description: \"The command to execute: 'view' to see document content, 'str_replace' to replace text\"\n              },\n              old_str: {\n                type: \"string\",\n                description: \"The text to be replaced (only for str_replace command)\"\n              },\n              new_str: {\n                type: \"string\",\n                description: \"The new text to replace with (only for str_replace command)\"\n              }\n            },\n            required: [\"command\"]\n          }\n        },\n        {\n          name: \"document_writer\",\n          description: \"Tool for writing content directly to the document\",\n          input_schema: {\n            type: \"object\",\n            properties: {\n              content: {\n                type: \"string\",\n                description: \"The content to write to the document\"\n              },\n              position: {\n                type: \"string\",\n                enum: [\"start\", \"end\", \"replace_all\"],\n                description: \"Where to insert the content: 'start' for beginning of document, 'end' for end of document, 'replace_all' to replace entire document content\"\n              },\n              formatting: {\n                type: \"object\",\n                properties: {\n                  bold: {\n                    type: \"boolean\",\n                    description: \"Whether the text should be bold\"\n                  },\n                  italic: {\n                    type: \"boolean\",\n                    description: \"Whether the text should be italic\"\n                  },\n                  underline: {\n                    type: \"boolean\",\n                    description: \"Whether the text should be underlined\"\n                  },\n                  color: {\n                    type: \"string\",\n                    description: \"The color of the text (e.g., 'red', '#FF0000')\"\n                  },\n                  size: {\n                    type: \"number\",\n                    description: \"The font size in points\"\n                  }\n                }\n              }\n            },\n            required: [\"content\", \"position\"]\n          }\n        }\n      ]\n    });\n\n    let aiResponse = \"\";\n    const toolOperations: ToolOperation[] = [];\n    \n    if (response.content && response.content.length > 0) {\n      for (const item of response.content) {\n        if (item.type === \"text\") {\n          aiResponse += item.text;\n        } else if (item.type === \"tool_use\") {\n          toolOperations.push({\n            name: item.name,\n            input: item.input\n          });\n        }\n      }\n    }\n\n    return { aiResponse, toolOperations };\n  } catch (error) {\n    console.error(\"Error getting AI response:\", error);\n    return { aiResponse: \"Sorry, I encountered an error. Please try again.\", toolOperations: [] };\n  }\n}\n","// Document manipulation service\nimport { FormattingOptions } from '../models/interfaces';\n\n/**\n * Write content to the document with specified position and formatting\n */\nexport async function writeToDocument(content: string, position: string, formatting: FormattingOptions): Promise<void> {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      \n      // Split content by line breaks while preserving them\n      const paragraphs = content.split(/\\r?\\n/);\n\n      if (position === \"replace_all\") {\n        body.clear();\n      }\n      \n      // Determine insertion location\n      const insertLocation = position === \"start\" ? Word.InsertLocation.start : Word.InsertLocation.end;\n      \n      for (let i = 0; i < paragraphs.length; i++) {\n        const paragraphText = paragraphs[i];\n        \n        // Skip empty paragraphs but add a blank line to preserve structure\n        if (paragraphText.trim() === \"\") {\n          body.insertParagraph(\"\", insertLocation);\n          continue;\n        }\n        \n        // Insert the paragraph text\n        const paragraph = body.insertParagraph(paragraphText, insertLocation);\n        \n        // Apply formatting if specified\n        if (formatting) {\n          if (formatting.bold !== undefined) {\n            paragraph.font.bold = formatting.bold;\n          }\n          if (formatting.italic !== undefined) {\n            paragraph.font.italic = formatting.italic;\n          }\n          if (formatting.underline !== undefined) {\n            paragraph.font.underline = formatting.underline ? Word.UnderlineType.single : Word.UnderlineType.none;\n          }\n          if (formatting.color) {\n            paragraph.font.color = formatting.color;\n          }\n          if (formatting.size) {\n            paragraph.font.size = formatting.size;\n          }\n        }\n      }\n      \n      // Sync the changes to the document\n      await context.sync();\n      \n      // Show a success message\n      const statusElement = document.createElement(\"div\");\n      statusElement.className = \"status-message\";\n      statusElement.textContent = \"Content added to document!\";\n      document.body.appendChild(statusElement);\n      \n      // Remove the status message after a few seconds\n      setTimeout(() => {\n        statusElement.remove();\n      }, 3000);\n    });\n  } catch (error) {\n    console.error(\"Error writing to document:\", error);\n    throw error;\n  }\n}\n\n/**\n * Get the entire document content\n */\nexport async function getDocumentContent(): Promise<string> {\n  try {\n    return await Word.run(async (context) => {\n      const body = context.document.body;\n      body.load(\"text\");\n      await context.sync();\n      return body.text;\n    });\n  } catch (error) {\n    console.error(\"Error getting document content:\", error);\n    return \"\";\n  }\n}\n\n/**\n * Replace text in the document\n */\nexport async function replaceTextInDocument(oldText: string, newText: string): Promise<void> {\n  try {\n    await Word.run(async (context) => {\n      // Use more precise search to maintain formatting\n      const searchResults = context.document.body.search(oldText, { \n        matchCase: true, \n        matchWholeWord: false,\n        matchWildcards: false\n      });\n      \n      context.load(searchResults, 'text');\n      await context.sync();\n      \n      console.log(`Found ${searchResults.items.length} instances of \"${oldText}\"`);\n      \n      for (let i = 0; i < searchResults.items.length; i++) {\n        // Get the range to preserve formatting\n        const range = searchResults.items[i];\n        \n        // Load the range to ensure we have all properties\n        context.load(range, ['text', 'paragraphs']);\n        await context.sync();\n        \n        // Replace text while preserving formatting\n        range.insertText(newText, Word.InsertLocation.replace);\n      }\n      \n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Error replacing text:\", error);\n    throw error;\n  }\n}\n\n/**\n * Insert a response into the Word document as a new paragraph\n */\nexport async function insertResponseToDocument(text: string): Promise<void> {\n  try {\n    await Word.run(async (context) => {\n      // Insert the text at the end of the document\n      const paragraph = context.document.body.insertParagraph(text, Word.InsertLocation.end);\n      \n      // Format the paragraph\n      paragraph.font.color = \"black\";\n      paragraph.font.size = 11;\n      \n      // Add some spacing before the paragraph\n      paragraph.insertParagraph(\"\", Word.InsertLocation.before);\n      \n      // Sync the changes to the document\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Error inserting response:\", error);\n    throw error;\n  }\n}\n","// Conversation management service\nimport { Conversation, ChatMessage } from '../models/interfaces';\n\n// Store for conversations\nlet conversations: Conversation[] = [];\nlet currentConversation: Conversation | null = null;\n\n/**\n * Create a new conversation\n */\nexport function createNewConversation(): Conversation {\n  const newConversation: Conversation = {\n    id: generateId(),\n    title: \"New Conversation\",\n    timestamp: new Date(),\n    messages: [\n      {\n        content: \"Hello! I'm AskJunior Assistant. How can I help with your document today?\",\n        sender: \"assistant\" as \"assistant\", // Explicitly type as literal \"assistant\"\n        timestamp: new Date(),\n      },\n    ],\n  };\n\n  conversations.push(newConversation);\n  currentConversation = newConversation;\n  saveConversations();\n  return newConversation;\n}\n\n/**\n * Generate a unique ID\n */\nfunction generateId(): string {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n\n/**\n * Add a message to the current conversation\n */\nexport function addMessageToConversation(message: ChatMessage): void {\n  if (currentConversation) {\n    currentConversation.messages.push(message);\n    \n    // Update conversation title if it's the first user message\n    if (currentConversation.messages.length === 2 && message.sender === \"user\") {\n      currentConversation.title = message.content.substring(0, 30) + (message.content.length > 30 ? \"...\" : \"\");\n    }\n    \n    saveConversations();\n  }\n}\n\n/**\n * Save conversations to local storage\n */\nexport function saveConversations(): void {\n  try {\n    localStorage.setItem(\"conversations\", JSON.stringify(conversations));\n  } catch (error) {\n    console.error(\"Error saving conversations:\", error);\n  }\n}\n\n/**\n * Load past conversations from local storage\n */\nexport function loadPastConversations(): Conversation[] {\n  try {\n    const savedConversations = localStorage.getItem(\"conversations\");\n    if (savedConversations) {\n      conversations = JSON.parse(savedConversations);\n      \n      // Convert string dates back to Date objects\n      conversations.forEach(conversation => {\n        conversation.timestamp = new Date(conversation.timestamp);\n        conversation.messages.forEach(message => {\n          message.timestamp = new Date(message.timestamp);\n        });\n      });\n    }\n    \n    // If there are conversations, set the current one to the most recent\n    if (conversations.length > 0) {\n      currentConversation = conversations[conversations.length - 1];\n    } else {\n      createNewConversation();\n    }\n    \n    return conversations;\n  } catch (error) {\n    console.error(\"Error loading conversations:\", error);\n    conversations = [];\n    createNewConversation();\n    return conversations;\n  }\n}\n\n/**\n * Load a specific conversation by ID\n */\nexport function loadConversation(id: string): boolean {\n  const conversation = conversations.find(conv => conv.id === id);\n  if (conversation) {\n    currentConversation = conversation;\n    console.log(`Successfully loaded conversation: ${id}`);\n    return true;\n  } else {\n    console.error(`Conversation not found with ID: ${id}`);\n    return false;\n  }\n}\n\n/**\n * Get the current conversation\n */\nexport function getCurrentConversation(): Conversation | null {\n  return currentConversation;\n}\n\n/**\n * Get all conversations\n */\nexport function getAllConversations(): Conversation[] {\n  return conversations;\n}\n","// UI service for handling user interface interactions\nimport { ChatMessage, Conversation } from '../models/interfaces';\nimport { getCurrentConversation, getAllConversations, loadConversation } from './conversation.service';\n\n/**\n * Add a message to the UI\n */\nexport function addMessageToUI(message: ChatMessage): void {\n  const chatMessages = document.getElementById(\"chat-messages\");\n  if (!chatMessages) return;\n\n  const messageElement = document.createElement(\"div\");\n  messageElement.className = `message ${message.sender}`;\n\n  const contentElement = document.createElement(\"div\");\n  contentElement.className = \"message-content\";\n  contentElement.textContent = message.content;\n\n  const timeElement = document.createElement(\"div\");\n  timeElement.className = \"message-time\";\n  timeElement.textContent = formatTime(message.timestamp);\n\n  messageElement.appendChild(contentElement);\n  messageElement.appendChild(timeElement);\n  chatMessages.appendChild(messageElement);\n\n  // Scroll to the bottom of the chat\n  chatMessages.scrollTop = chatMessages.scrollHeight;\n}\n\n/**\n * Format time for display\n */\nfunction formatTime(date: Date): string {\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n}\n\n/**\n * Render the current conversation in the UI\n */\nexport function renderCurrentConversation(): void {\n  const chatMessages = document.getElementById(\"chat-messages\");\n  if (!chatMessages) return;\n\n  // Clear existing messages\n  chatMessages.innerHTML = \"\";\n\n  const conversation = getCurrentConversation();\n  if (conversation) {\n    // Add all messages to the UI\n    conversation.messages.forEach(message => {\n      addMessageToUI(message);\n    });\n  }\n}\n\n/**\n * Update the past conversations UI\n */\nexport function updatePastConversationsUI(): void {\n  const pastConversations = document.getElementById(\"past-conversations\");\n  if (!pastConversations) return;\n\n  // Clear existing conversations\n  pastConversations.innerHTML = \"\";\n\n  // Add all conversations to the UI\n  const conversations = getAllConversations();\n  conversations.forEach(conversation => {\n    const listItem = document.createElement(\"li\");\n    listItem.className = \"past-conversation-item\";\n    listItem.dataset.id = conversation.id;\n    \n    // Create a container for better layout\n    const contentContainer = document.createElement(\"div\");\n    contentContainer.className = \"conversation-content\";\n    \n    // Title with truncation if needed\n    const titleElement = document.createElement(\"div\");\n    titleElement.className = \"conversation-title\";\n    titleElement.textContent = conversation.title || \"New Conversation\";\n    \n    // Date in a readable format\n    const timeElement = document.createElement(\"div\");\n    timeElement.className = \"conversation-time\";\n    timeElement.textContent = formatDate(conversation.timestamp);\n    \n    // Add elements to container\n    contentContainer.appendChild(titleElement);\n    contentContainer.appendChild(timeElement);\n    listItem.appendChild(contentContainer);\n    \n    // Add click event to load conversation\n    listItem.addEventListener(\"click\", () => {\n      // Load the selected conversation\n      const success = loadConversation(conversation.id);\n      \n      if (success) {\n        renderCurrentConversation();\n        \n        // Highlight the selected conversation\n        document.querySelectorAll(\".past-conversation-item\").forEach(el => {\n          el.classList.remove(\"selected\");\n        });\n        listItem.classList.add(\"selected\");\n        \n        console.log(`Loaded conversation: ${conversation.id}`);\n      } else {\n        console.error(`Failed to load conversation: ${conversation.id}`);\n      }\n    });\n    \n    pastConversations.appendChild(listItem);\n  });\n}\n\n/**\n * Format date for display\n */\nfunction formatDate(date: Date): string {\n  return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n}\n","// Tool operations service\nimport { ToolOperation, ChatMessage } from '../models/interfaces';\nimport { writeToDocument, replaceTextInDocument } from './document.service';\nimport { addMessageToConversation } from './conversation.service';\nimport { addMessageToUI } from './ui.service';\n\n/**\n * Process tool operations from Claude's response\n */\nexport async function processToolOperations(operations: ToolOperation[]): Promise<void> {\n  for (const operation of operations) {\n    try {\n      if (operation.name === \"text_editor\") {\n        await processTextEditorOperation(operation);\n      } else if (operation.name === \"document_writer\") {\n        await processDocumentWriterOperation(operation);\n      }\n    } catch (error) {\n      console.error(`Error processing operation ${operation.name}:`, error);\n    }\n  }\n}\n\n/**\n * Process text editor operations\n */\nasync function processTextEditorOperation(operation: ToolOperation): Promise<void> {\n  const command = operation.input.command;\n  \n  if (command === \"view\") {\n    console.log(\"View operation processed\");\n  } else if (command === \"str_replace\") {\n    const oldStr = operation.input.old_str;\n    const newStr = operation.input.new_str;\n    \n    if (oldStr && newStr) {\n      await replaceTextInDocument(oldStr, newStr);\n      \n      const replaceMessage: ChatMessage = {\n        content: `I've replaced \"${oldStr}\" with \"${newStr}\" in your document.`,\n        sender: \"assistant\" as \"assistant\",\n        timestamp: new Date(),\n      };\n      \n      addMessageToConversation(replaceMessage);\n      addMessageToUI(replaceMessage);\n    }\n  }\n}\n\n/**\n * Process document writer operations\n */\nasync function processDocumentWriterOperation(operation: ToolOperation): Promise<void> {\n  const content = operation.input.content;\n  const position = operation.input.position || \"end\";\n  const formatting = operation.input.formatting || {};\n  \n  if (content) {\n    // For replace_all operations, ensure we're preserving document structure\n    if (position === \"replace_all\") {\n      console.log(\"Performing replace_all operation with formatting preservation\");\n    }\n    \n    await writeToDocument(content, position, formatting);\n    \n    const writeMessage: ChatMessage = {\n      content: `I've added the requested content to your document while preserving formatting.`,\n      sender: \"assistant\" as \"assistant\",\n      timestamp: new Date(),\n    };\n    \n    addMessageToConversation(writeMessage);\n    addMessageToUI(writeMessage);\n  }\n}\n","/// <reference types=\"office-js\" />\n// Import services\nimport { getAIResponse } from './services/ai.service';\nimport { getDocumentContent, insertResponseToDocument } from './services/document.service';\nimport { createNewConversation, addMessageToConversation, loadPastConversations } from './services/conversation.service';\nimport { addMessageToUI, renderCurrentConversation, updatePastConversationsUI } from './services/ui.service';\nimport { processToolOperations } from './services/tool.service';\nimport { ChatMessage } from './models/interfaces';\n\n// API Key storage key\nconst API_KEY_STORAGE_KEY = 'anthropic_api_key';\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    initializeChatInterface();\n  }\n});\n\n/**\n * Initialize the chat interface and event listeners\n */\nfunction initializeChatInterface(): void {\n  // Load past conversations or create a new one if none exists\n  loadPastConversations();\n  \n  // Render the current conversation\n  renderCurrentConversation();\n  \n  // Update the past conversations UI\n  updatePastConversationsUI();\n\n  // Check if API key exists and show appropriate UI\n  checkApiKey();\n\n  // Set up event listeners\n  const sendButton = document.getElementById(\"send-message\");\n  const chatInput = document.getElementById(\"chat-input\") as HTMLTextAreaElement;\n  const newChatButton = document.getElementById(\"new-chat\");\n\n  if (sendButton && chatInput) {\n    // Send message on button click\n    sendButton.addEventListener(\"click\", () => {\n      sendMessage();\n    });\n\n    // Send message on Enter key (but allow Shift+Enter for new lines)\n    chatInput.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        event.preventDefault();\n        sendMessage();\n      }\n    });\n  }\n  \n  if (newChatButton) {\n    newChatButton.addEventListener(\"click\", () => {\n      createNewConversation();\n      renderCurrentConversation();\n      updatePastConversationsUI();\n    });\n  }\n}\n\n/**\n * Check if API key exists and show/hide API key input accordingly\n */\nfunction checkApiKey(): void {\n  const apiKey = localStorage.getItem(API_KEY_STORAGE_KEY);\n  const appBody = document.getElementById(\"app-body\");\n  const apiKeyContainer = document.getElementById(\"api-key-container\");\n  \n  if (!apiKey) {\n    // Show API key input if no key is stored\n    if (appBody) appBody.style.display = \"none\";\n    if (apiKeyContainer) apiKeyContainer.style.display = \"block\";\n  } else {\n    // Show chat interface if key is already stored\n    if (appBody) appBody.style.display = \"block\";\n    if (apiKeyContainer) apiKeyContainer.style.display = \"none\";\n  }\n\n  // Set up API key form submission\n  const apiKeyForm = document.getElementById(\"api-key-form\");\n  if (apiKeyForm) {\n    apiKeyForm.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      saveApiKey();\n    });\n  }\n}\n\n/**\n * Save the API key from the input field\n */\nfunction saveApiKey(): void {\n  const apiKeyInput = document.getElementById(\"api-key-input\") as HTMLInputElement;\n  if (apiKeyInput && apiKeyInput.value.trim()) {\n    localStorage.setItem(API_KEY_STORAGE_KEY, apiKeyInput.value.trim());\n    \n    // Show chat interface after saving API key\n    const appBody = document.getElementById(\"app-body\");\n    const apiKeyContainer = document.getElementById(\"api-key-container\");\n    \n    if (appBody) appBody.style.display = \"block\";\n    if (apiKeyContainer) apiKeyContainer.style.display = \"none\";\n  }\n}\n\n/**\n * Get the stored API key\n */\nfunction getApiKey(): string {\n  return localStorage.getItem(API_KEY_STORAGE_KEY) || '';\n}\n\n/**\n * Send a message from the user input\n */\nfunction sendMessage(): void {\n  const chatInput = document.getElementById(\"chat-input\") as HTMLTextAreaElement;\n  const content = chatInput.value.trim();\n\n  if (content) {\n    const userMessage: ChatMessage = {\n      content,\n      sender: \"user\" as \"user\",\n      timestamp: new Date(),\n    };\n\n    addMessageToConversation(userMessage);\n    addMessageToUI(userMessage);\n    chatInput.value = \"\";\n    processUserMessage(content);\n    \n    // Update the past conversations UI in case the title changed\n    updatePastConversationsUI();\n  }\n}\n\n/**\n * Process a user message and get a response from the AI\n */\nasync function processUserMessage(content: string): Promise<void> {\n  try {\n    // Get API key\n    const apiKey = getApiKey();\n    \n    // Check if API key exists\n    if (!apiKey) {\n      const errorMessage: ChatMessage = {\n        content: \"Please provide your Anthropic API key to continue.\",\n        sender: \"assistant\" as \"assistant\",\n        timestamp: new Date(),\n      };\n      \n      addMessageToConversation(errorMessage);\n      addMessageToUI(errorMessage);\n      \n      // Show API key input\n      const appBody = document.getElementById(\"app-body\");\n      const apiKeyContainer = document.getElementById(\"api-key-container\");\n      \n      if (appBody) appBody.style.display = \"none\";\n      if (apiKeyContainer) apiKeyContainer.style.display = \"block\";\n      \n      return;\n    }\n    \n    // Get document content to provide context\n    const documentContent = await getDocumentContent();\n    \n    // Get AI response with API key\n    const { aiResponse, toolOperations } = await getAIResponse(content, documentContent, apiKey);\n    \n    // Add the assistant's response to the conversation\n    if (aiResponse) {\n      const assistantMessage: ChatMessage = {\n        content: aiResponse,\n        sender: \"assistant\" as \"assistant\",\n        timestamp: new Date(),\n      };\n      \n      addMessageToConversation(assistantMessage);\n      addMessageToUI(assistantMessage);\n    }\n    \n    // Process any tool operations\n    if (toolOperations.length > 0) {\n      await processToolOperations(toolOperations);\n    } else if (aiResponse) {\n      // If no tool operations, just insert the response to document\n      await insertResponseToDocument(aiResponse);\n    }\n  } catch (error) {\n    console.error(\"Error processing message:\", error);\n    \n    // Add an error message to the conversation\n    const errorMessage: ChatMessage = {\n      content: \"Sorry, I encountered an error. Please try again.\",\n      sender: \"assistant\" as \"assistant\",\n      timestamp: new Date(),\n    };\n    \n    addMessageToConversation(errorMessage);\n    addMessageToUI(errorMessage);\n  }\n}\n\nexport async function run(): Promise<void> {\n  return Word.run(async (context) => {\n    // Initialize the add-in\n    await context.sync();\n  });\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>AskJunior Assistant</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <div id=\\\"api-key-container\\\" class=\\\"api-key-container\\\" style=\\\"display:none\\\"> <header class=\\\"chat-header\\\"> <h1 class=\\\"ms-font-xl\\\">AskJunior Assistant</h1> <p class=\\\"ms-font-m\\\">Please enter your Anthropic API key to continue</p> </header> <form id=\\\"api-key-form\\\" class=\\\"api-key-form\\\"> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"api-key-input\\\">Anthropic API Key</label> <input id=\\\"api-key-input\\\" class=\\\"ms-TextField-field\\\" type=\\\"password\\\" placeholder=\\\"Enter your API key here\\\" required> </div> <button type=\\\"submit\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Save API Key</span> </button> <p class=\\\"ms-font-s api-key-info\\\"> You can get an API key from <a href=\\\"https://console.anthropic.com/keys\\\" target=\\\"_blank\\\">Anthropic Console</a> </p> </form> </div> <div id=\\\"app-body\\\" style=\\\"display:none\\\"> <main id=\\\"chat-container\\\" class=\\\"chat-container\\\"> <header class=\\\"chat-header\\\"> <h1 class=\\\"ms-font-xl\\\">AskJunior Assistant</h1> <p class=\\\"ms-font-m\\\">Your document drafting helper</p> </header> <div id=\\\"chat-messages\\\" class=\\\"chat-messages\\\"> <div class=\\\"message assistant\\\"> <div class=\\\"message-content\\\"> Hello! I'm AskJunior Assistant. How can I help with your document today? </div> </div> </div> <template id=\\\"message-template\\\"> <div class=\\\"message\\\"> <div class=\\\"message-content\\\"></div> </div> </template> <div class=\\\"chat-input-container\\\"> <textarea id=\\\"chat-input\\\" class=\\\"chat-input\\\" placeholder=\\\"Type your message here...\\\"></textarea> <button id=\\\"send-message\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Send</span> </button> </div> <div class=\\\"past-conversations-container\\\"> <h2 class=\\\"ms-font-l\\\">Past Conversations</h2> <ul id=\\\"past-conversations\\\" class=\\\"past-conversations-list\\\"> </ul> </div> <div class=\\\"new-conversation-container\\\"> <button id=\\\"new-chat\\\" class=\\\"ms-Button ms-Button--primary new-conversation-button\\\"> <span class=\\\"ms-Button-label\\\">New Conversation</span> </button> </div> </main> </div> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","VERSION","kind","getDefaultAgent","fileFromPath","auto","MultipartBody","constructor","body","Symbol","toStringTag","shims","options","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","isFsReadStream","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","error","message","async","form","opts","url","value","APIError","status","headers","super","makeMessage","request_id","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","APIConnectionTimeoutError","_LineDecoder_carriageReturnIndex","__classPrivateFieldSet","receiver","state","f","TypeError","has","set","__classPrivateFieldGet","get","LineDecoder","buffer","Uint8Array","decode","chunk","binaryChunk","ArrayBuffer","TextEncoder","encode","newData","lines","patternIndex","findNewlineIndex","carriage","index","push","decodeText","slice","endIndex","preceding","line","bytes","Buffer","toString","from","name","TextDecoder","textDecoder","flush","startIndex","findDoubleNewlineIndex","ReadableStreamToAsyncIterable","stream","asyncIterator","reader","getReader","next","result","read","done","releaseLock","cancelPromise","cancel","WeakMap","NEWLINE_CHARS","Set","NEWLINE_REGEXP","Stream","iterator","controller","fromSSEResponse","response","consumed","sse","abort","sseDecoder","SSEDecoder","lineDecoder","iter","sseChunk","data","iterSSEChunks","_iterSSEMessages","event","parse","console","raw","createResponseHeaders","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","shift","toReadableStream","encoder","start","pull","ctrl","close","enqueue","err","return","chunks","endsWith","substring","join","startsWith","fieldname","_","str","indexOf","delimiter","partition","isBlobLike","size","type","text","arrayBuffer","getStringFromMaybeBuffer","x","String","isAsyncIterableIterator","isMultipartBody","_AbstractPage_client","defaultParseResponse","props","debug","__streamClass","__binaryResponse","contentType","includes","json","_addRequestID","Array","isArray","defineProperty","enumerable","APIPromise","Promise","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","withResponse","all","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","path","methodRequest","post","patch","put","method","request","DataView","isView","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","buildRequest","retryCount","query","__binaryRequest","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","signal","reqHeaders","applyHeadersMut","getHeader","_calculateNonstreamingTimeout","maxTokens","defaultTimeout","prepareOptions","prepareRequest","parseHeaders","fromEntries","map","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","URL","defaultQuery","isEmptyObj","search","stringifyQuery","entries","filter","key","encodeURIComponent","init","ms","addEventListener","setTimeout","fetchOptions","keepAliveTimeout","sockets","socket","values","flat","setKeepAlive","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","Date","now","calculateDefaultRetryTimeoutMillis","sleep","numRetries","Math","min","pow","random","AbstractPage","client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","item","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","keys","every","k","hasOwn","normalizeArch","arch","normalizePlatform","platform","_platformHeaders","Deno","build","os","version","deno","EdgeRuntime","process","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","browser","getBrowserInfo","getPlatformProperties","startsWithSchemeRegexp","n","isInteger","readEnv","env","trim","_k","targetHeaders","newHeaders","lowerKey","val","action","args","log","c","r","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","warn","APIResource","_client","Completions","create","_options","has_more","first_id","last_id","nextPageParams","info","firstId","before_id","cursor","after_id","JSONLDecoder","decoder","fromResponse","Batches","retrieve","messageBatchId","list","MessageBatchesPage","delete","results","batch","results_url","processing_status","id","strip","tokens","lastToken","lastCharacterOfLastToken","tokenBeforeTheLastToken","partialParse","input","output","token","tail","splice","lastIndexOf","reverse","unstrip","current","char","danglingQuote","NUMBERS","LETTERS","tokenize","_MessageStream_instances","_MessageStream_currentMessageSnapshot","_MessageStream_connectedPromise","_MessageStream_resolveConnectedPromise","_MessageStream_rejectConnectedPromise","_MessageStream_endPromise","_MessageStream_resolveEndPromise","_MessageStream_rejectEndPromise","_MessageStream_listeners","_MessageStream_ended","_MessageStream_errored","_MessageStream_aborted","_MessageStream_catchingPromiseCreated","_MessageStream_response","_MessageStream_request_id","_MessageStream_getFinalMessage","_MessageStream_getFinalText","_MessageStream_handleError","_MessageStream_beginRequest","_MessageStream_addStreamEvent","_MessageStream_endRequest","_MessageStream_accumulateMessage","JSON_BUF_PROPERTY","MessageStream","add","messages","receivedMessages","_emit","anthropicError","reject","runner","_run","_fromReadableStream","createMessage","_addMessageParam","_createMessage","executor","_emitFinal","_addMessage","emit","_connected","ended","errored","on","listener","off","listeners","findIndex","l","once","emitted","currentMessage","finalMessage","finalText","forEach","at","WeakSet","textBlocks","content","block","messageSnapshot","delta","citation","citations","partial_json","thinking","signature","snapshot","stop_reason","stop_sequence","usage","output_tokens","content_block","snapshotContent","jsonBuf","writable","pushQueue","readQueue","bind","Messages","arguments","batches","model","DEPRECATED_MODELS","max_tokens","countTokens","Models","modelId","ModelInfosPage","BetaModelInfosPage","betas","BetaMessageBatchesPage","_BetaMessageStream_instances","_BetaMessageStream_currentMessageSnapshot","_BetaMessageStream_connectedPromise","_BetaMessageStream_resolveConnectedPromise","_BetaMessageStream_rejectConnectedPromise","_BetaMessageStream_endPromise","_BetaMessageStream_resolveEndPromise","_BetaMessageStream_rejectEndPromise","_BetaMessageStream_listeners","_BetaMessageStream_ended","_BetaMessageStream_errored","_BetaMessageStream_aborted","_BetaMessageStream_catchingPromiseCreated","_BetaMessageStream_response","_BetaMessageStream_request_id","_BetaMessageStream_getFinalMessage","_BetaMessageStream_getFinalText","_BetaMessageStream_handleError","_BetaMessageStream_beginRequest","_BetaMessageStream_addStreamEvent","_BetaMessageStream_endRequest","_BetaMessageStream_accumulateMessage","BetaMessageStream","Beta","models","_a","Anthropic","apiKey","authToken","dangerouslyAllowBrowser","completions","beta","apiKeyAuth","bearerAuth","Authorization","HUMAN_PROMPT","AI_PROMPT","DEFAULT_TIMEOUT","AnthropicError","toFile","lastModified","isFileLike","blob","isResponseLike","pathname","split","pop","bits","parts","getOwnPropertyNames","propsForError","getBytes","filename","getName","_regeneratorRuntime","t","a","u","define","configurable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","prev","charAt","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","_arrayLikeToArray","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","getAIResponse","_x","_x2","_x3","_getAIResponse","apply","_callee","userRequest","documentContent","anthropic","aiResponse","toolOperations","_iterator","_step","_context","system","role","concat","tools","description","input_schema","properties","command","enum","old_str","new_str","required","position","formatting","bold","italic","underline","color","t0","_next","_throw","_asyncToGenerator","writeToDocument","_writeToDocument","_callee2","_context2","Word","run","_ref","context","paragraphs","insertLocation","paragraphText","paragraph","statusElement","clear","InsertLocation","end","insertParagraph","font","UnderlineType","single","none","sync","createElement","className","textContent","appendChild","remove","_x7","getDocumentContent","_getDocumentContent","_callee4","_context4","_ref2","_callee3","_context3","load","_x8","replaceTextInDocument","_x4","_x5","_replaceTextInDocument","_callee6","oldText","newText","_context6","_ref3","_callee5","searchResults","range","_context5","matchCase","matchWholeWord","matchWildcards","items","insertText","_x9","insertResponseToDocument","_x6","_insertResponseToDocument","_callee8","_context8","_ref4","_callee7","_context7","before","_x10","conversations","currentConversation","createNewConversation","newConversation","title","timestamp","sender","saveConversations","addMessageToConversation","localStorage","setItem","addMessageToUI","chatMessages","getElementById","messageElement","contentElement","timeElement","toLocaleTimeString","hour","minute","scrollTop","scrollHeight","renderCurrentConversation","innerHTML","updatePastConversationsUI","pastConversations","conversation","listItem","dataset","contentContainer","titleElement","toLocaleDateString","month","day","find","conv","loadConversation","querySelectorAll","el","classList","processToolOperations","_processToolOperations","operations","operation","processTextEditorOperation","processDocumentWriterOperation","t1","_processTextEditorOperation","oldStr","newStr","replaceMessage","_processDocumentWriterOperation","writeMessage","API_KEY_STORAGE_KEY","sendMessage","chatInput","userMessage","_processUserMessage","processUserMessage","errorMessage","appBody","apiKeyContainer","_yield$getAIResponse","assistantMessage","_errorMessage","getItem","style","display","Office","onReady","host","HostType","savedConversations","loadPastConversations","apiKeyForm","preventDefault","apiKeyInput","saveApiKey","checkApiKey","sendButton","newChatButton","shiftKey","initializeChatInterface"],"sourceRoot":""}